/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Trabalho 2 - Arquitetura de Computadores - GCC-117
 * 
 * Simulador de um processador multiciclo
 * 
 * Alunos: Carlos Daniel Drury
 *	   Elder Marques
 *         Gabriel Almeida Miranda
 *         Leonardo Almeida de Araújo
 *
 * Implementação na linguagem JAVA
 * IDE utilizada para execução e compilação: NetBeans 7.3
 * Plataformas testadas: Windows 7 e Ubuntu 12.10
 *
 */


package trabarq1;

import javax.swing.JFileChooser;

public class Window extends javax.swing.JFrame {

    /** Creates new form Window */
    public Window() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        bancoRegistradores = new javax.swing.JTable();
        labelMEM = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sinaisID = new javax.swing.JTable();
        labelInstrucao = new javax.swing.JLabel();
        textInstrucao = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        pc = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        sinaisEXE = new javax.swing.JTable();
        instrucaoAtualBin = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        sinaisMEM = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        instrucoes = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        proximo = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        DadosWR = new javax.swing.JTable();
        labelEXE = new javax.swing.JLabel();
        labelWB = new javax.swing.JLabel();
        labelStatusMemoria = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        memoryStatus = new javax.swing.JTextArea();
        mainMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuItemAbrir = new javax.swing.JMenuItem();
        fecharMenu = new javax.swing.JMenuItem();
        sairMenu = new javax.swing.JMenuItem();
        execMenuMenu = new javax.swing.JMenu();
        execAllMenu = new javax.swing.JMenuItem();
        executarMenu = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulador MIPS 32 - Multiciclo");
        setResizable(false);

        jLabel12.setText("Registradores:");

        bancoRegistradores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"pc", null},
                {"hi", null},
                {"lo", null},
                {"$1", null},
                {"$2", null},
                {"$3", null},
                {"$4", null},
                {"$5", null},
                {"$6", null},
                {"$7", null},
                {"$8", null},
                {"$9", null},
                {"$10", null},
                {"$11", null},
                {"$12", null},
                {"$13", null},
                {"$14", null},
                {"$15", null},
                {"$16", null},
                {"$17", null},
                {"$18", null},
                {"$19", null},
                {"$20", null},
                {"$21", null},
                {"$22", null},
                {"$23", null},
                {"$24", null},
                {"$25", null},
                {"$26", null},
                {"$27", null},
                {"$28", null},
                {"$29", null},
                {"$30", null},
                {"$31", null},
                {"$32", null}
            },
            new String [] {
                "Registrador", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bancoRegistradores.getTableHeader().setReorderingAllowed(false);
        bancoRegistradoresModel = bancoRegistradores.getModel();
        bancoRegistradores.setAutoResizeMode(0);
        bancoRegistradores.getColumnModel().getColumn(0).setPreferredWidth(100);
        bancoRegistradores.getColumnModel().getColumn(1).setPreferredWidth(304);
        jScrollPane4.setViewportView(bancoRegistradores);

        labelMEM.setText("MEM:");

        jLabel10.setText("ID:");

        sinaisID.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"RegDst", "0"},
                {"RegWrite", "0"},
                {"AluSrc A", "0"},
                {"MemRead", "0"},
                {"MemWrite", "0"},
                {"Mem2Reg", "0"},
                {"IouD", "0"},
                {"IRWrite", "0"},
                {"PCWrite", "0"},
                {"PCWriteCond", "0"},
                {"REG A", "0"},
                {"REG B", "0"},
                {"ALUSrcB", "0"}
            },
            new String [] {
                "Sinais", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sinaisID.getTableHeader().setReorderingAllowed(false);
        sinaisDeControleModel = sinaisID.getModel();
        jScrollPane1.setViewportView(sinaisID);

        labelInstrucao.setText("Instrução Atual");

        textInstrucao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textInstrucaoActionPerformed(evt);
            }
        });

        jLabel1.setText("Instruções a serem executadas:");

        pc.setColumns(20);
        pc.setEditable(false);
        pc.setRows(5);
        pc.setAutoscrolls(false);
        pc.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pc.setMinimumSize(new java.awt.Dimension(0, 0));

        sinaisEXE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"ALUOut", "0"},
                {"Zero", "0"}
            },
            new String [] {
                "Sinais", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sinaisEXE.getTableHeader().setResizingAllowed(false);
        sinaisEXE.getTableHeader().setReorderingAllowed(false);
        sinaisDeControleModel = sinaisID.getModel();
        jScrollPane5.setViewportView(sinaisEXE);
        sinaisEXE.getAccessibleContext().setAccessibleName("sinaisEXE");

        instrucaoAtualBin.setColumns(20);
        instrucaoAtualBin.setEditable(false);
        instrucaoAtualBin.setRows(5);
        instrucaoAtualBin.setAutoscrolls(false);
        instrucaoAtualBin.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        instrucaoAtualBin.setMinimumSize(new java.awt.Dimension(0, 0));

        jLabel3.setText("Instrução atual (formato binário):");

        sinaisMEM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"MDR", null}
            },
            new String [] {
                "Sinais", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sinaisMEM.getTableHeader().setReorderingAllowed(false);
        dadosMEMModel = sinaisMEM.getModel();
        jScrollPane6.setViewportView(sinaisMEM);
        sinaisMEM.getAccessibleContext().setAccessibleParent(sinaisMEM.getTableHeader());

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane2.setAutoscrolls(true);
        jScrollPane2.setHorizontalScrollBar(null);

        instrucoes.setColumns(20);
        instrucoes.setEditable(false);
        instrucoes.setRows(5);
        jScrollPane2.setViewportView(instrucoes);

        jLabel9.setText("PC:");

        proximo.setText("Próxima");
        proximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proximoActionPerformed(evt);
            }
        });

        DadosWR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Valor do Registrador Atual", "0", "0"}
            },
            new String [] {
                "Dados", "Valor", "Endereço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DadosWR.getTableHeader().setReorderingAllowed(false);
        dadosMEMModel = sinaisMEM.getModel();
        jScrollPane7.setViewportView(DadosWR);

        labelEXE.setText("EXE:");

        labelWB.setText("WB:");

        labelStatusMemoria.setText("Status da Memória:");

        jScrollPane3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane3.setAutoscrolls(true);
        jScrollPane3.setHorizontalScrollBar(null);

        memoryStatus.setColumns(20);
        memoryStatus.setEditable(false);
        memoryStatus.setRows(5);
        jScrollPane3.setViewportView(memoryStatus);

        jMenu1.setText("Arquivo");

        menuItemAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuItemAbrir.setText("Abrir");
        menuItemAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuItemAbrirMouseReleased(evt);
            }
        });
        jMenu1.add(menuItemAbrir);

        fecharMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        fecharMenu.setText("Fechar");
        fecharMenu.setEnabled(false);
        fecharMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                fecharMenuMouseReleased(evt);
            }
        });
        jMenu1.add(fecharMenu);

        sairMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        sairMenu.setText("Sair");
        sairMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sairMenuMouseReleased(evt);
            }
        });
        jMenu1.add(sairMenu);

        mainMenu.add(jMenu1);

        execMenuMenu.setText("Execução");
        execMenuMenu.setEnabled(false);

        execAllMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        execAllMenu.setText("Executar tudo");
        execAllMenu.setEnabled(false);
        execMenuMenu.add(execAllMenu);

        executarMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        executarMenu.setText("Executar por instrução");
        executarMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                executarMenuMouseReleased(evt);
            }
        });
        execMenuMenu.add(executarMenu);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, 0));
        jMenuItem7.setText("Executar por estágio");
        jMenuItem7.setEnabled(false);
        execMenuMenu.add(jMenuItem7);

        mainMenu.add(execMenuMenu);

        setJMenuBar(mainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(proximo))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelEXE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWB)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(pc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textInstrucao, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelInstrucao))
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(instrucaoAtualBin, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(labelMEM)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelStatusMemoria)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelInstrucao, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textInstrucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(instrucaoAtualBin, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(proximo))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pc, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelMEM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelStatusMemoria)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(labelEXE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelWB))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void textInstrucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textInstrucaoActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_textInstrucaoActionPerformed

private void menuItemAbrirMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuItemAbrirMouseReleased
        fileOpenDialog = new javax.swing.JFileChooser();
        fileOpenDialog.setCurrentDirectory(new java.io.File("C:\\"));
        fileOpenDialog.setDialogTitle("Abrir Arquivo ASM");
        
        int returnValue = fileOpenDialog.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            Interpretador.setArquivo(fileOpenDialog.getSelectedFile());

            instrucoes.setText(Interpretador.getFileContents());

            fecharMenu.setEnabled(true);
            execMenuMenu.setEnabled(true);
        }
}//GEN-LAST:event_menuItemAbrirMouseReleased

    public static void instrucaoAtual(String Instruction){
        textInstrucao.setText(Instruction);
    }

   
    
      public static void setPc(int num) {
        pc.setText(String.valueOf(num));
    }

    public static void setPc(String snum) {
        pc.setText(snum);
    }
    
    public static void setRegister(String data, int row) {
        bancoRegistradoresModel.setValueAt(data, row, 1);
    }

    public static void setInstrucaoAtualBin(String instBin) {
        instrucaoAtualBin.setText(instBin);
    }
    
     public static void setMemoryStatus(String mem) {
        memoryStatus.setText(memoryStatus.getText() + mem + "\n");
    }
    
    // Define os sinais de controle no estagio ID
    public static void setSinaisDeControle(String RegDst, String RegWrite, String ALUSrcA, String MemRead, 
            String MemWrite, String Mem2Reg, String IouD, String IRWrite, String PCWrite, 
            String PCCondWrite, String RegA, String RegB, String ALUSrcB) {
        sinaisDeControleModel.setValueAt(RegDst, 0, 1);
        sinaisDeControleModel.setValueAt(RegWrite, 1, 1);
        sinaisDeControleModel.setValueAt(ALUSrcA, 2, 1);
        sinaisDeControleModel.setValueAt(MemRead, 3, 1);
        sinaisDeControleModel.setValueAt(MemWrite, 4, 1);
        sinaisDeControleModel.setValueAt(Mem2Reg, 5, 1);
        sinaisDeControleModel.setValueAt(IouD, 6, 1);
        sinaisDeControleModel.setValueAt(IRWrite, 7, 1);
        sinaisDeControleModel.setValueAt(PCWrite, 8, 1);
        sinaisDeControleModel.setValueAt(PCCondWrite, 9, 1);
        sinaisDeControleModel.setValueAt(RegA, 10, 1);
        sinaisDeControleModel.setValueAt(RegB, 11, 1);
        sinaisDeControleModel.setValueAt(ALUSrcB, 12, 1);

        sinaisID.setModel(sinaisDeControleModel);
        
        
    }
    
    
     
     public static void setSinalDeControle(String sinal, int row) {
        sinaisDeControleModel.setValueAt(sinal, row, 1);
    }
     
     // Seta o sinal do estagio EX
     public static void setSinalEX(String AluOUT , String Zero){
         sinaisEXE.setValueAt(Zero, 1, 1);
         sinaisEXE.setValueAt(AluOUT, 0, 1);
     }
     
     // Seta o valor do MDR quando é feito um LW
     public static void setMDR(String data){
         sinaisMEM.setValueAt(data, 0, 1);

     }
     
     // Seta o valor do registrador de destino no estagio WR
     public static void setWR(String data, String end){
         DadosWR.setValueAt(data, 0, 1);
         DadosWR.setValueAt(end, 0, 2);
     }

private void fecharMenuMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fecharMenuMouseReleased
        Interpretador.clearAll();

        setSinaisDeControle("0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" , "0" , "0");
        setSinalEX("0", "0");


        instrucoes.setText(null);
        pc.setText(null);
        //instrucaoAtual.setText(null);
        instrucaoAtualBin.setText(null);
       
        fecharMenu.setEnabled(false);
        execMenuMenu.setEnabled(false);
}//GEN-LAST:event_fecharMenuMouseReleased




private void sairMenuMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sairMenuMouseReleased
        System.exit(0);
}//GEN-LAST:event_sairMenuMouseReleased

private void executarMenuMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_executarMenuMouseReleased
        Interpretador.RunInstruction();
}//GEN-LAST:event_executarMenuMouseReleased

private void proximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proximoActionPerformed
// TODO add your handling code here:
    Interpretador.RunInstruction();
    
}//GEN-LAST:event_proximoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Window().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTable DadosWR;
    private static javax.swing.JTable bancoRegistradores;
    private javax.swing.JMenuItem execAllMenu;
    private javax.swing.JMenu execMenuMenu;
    private javax.swing.JMenuItem executarMenu;
    private javax.swing.JMenuItem fecharMenu;
    private static javax.swing.JTextArea instrucaoAtualBin;
    private static javax.swing.JTextArea instrucoes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel labelEXE;
    private javax.swing.JLabel labelInstrucao;
    private javax.swing.JLabel labelMEM;
    private javax.swing.JLabel labelStatusMemoria;
    private javax.swing.JLabel labelWB;
    private javax.swing.JMenuBar mainMenu;
    private static javax.swing.JTextArea memoryStatus;
    private javax.swing.JMenuItem menuItemAbrir;
    private static javax.swing.JTextArea pc;
    private javax.swing.JButton proximo;
    private javax.swing.JMenuItem sairMenu;
    private static javax.swing.JTable sinaisEXE;
    private static javax.swing.JTable sinaisID;
    private static javax.swing.JTable sinaisMEM;
    private static javax.swing.JTextField textInstrucao;
    // End of variables declaration//GEN-END:variables
    private static javax.swing.JFileChooser fileOpenDialog;
    private static javax.swing.table.TableModel sinaisDeControleModel;
    private static javax.swing.table.TableModel bancoRegistradoresModel;
    private static javax.swing.table.TableModel sinaisEXEModel;
    private static javax.swing.table.TableModel dadosMEMModel;
    private static javax.swing.table.TableModel dadosWRModel;

    

}
